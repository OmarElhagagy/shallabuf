services:
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: shallabuf
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: shallabuf
    ports:
      - "5432:5432" # PostgreSQL
    volumes:
      - postgres_data:/var/lib/postgresql/data

  nats:
    image: nats:latest
    ports:
      - "4222:4222" # Client Port
      - "8222:8222" # Monitoring Port
    command: ["-js", "-m", "8222"]

  minio:
    image: minio/minio:latest
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: password
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000" # S3 API
      - "9001:9001" # MinIO Console
    volumes:
      - minio_data:/data

  redis:
    image: redis:latest
    ports:
      - "6379:6379" # Redis

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090" # Prometheus web interface
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yaml
    depends_on:
      - redis
      - nats
    networks:
      - default

  loki:
    image: grafana/loki:3.3.0
    container_name: loki
    ports:
      - "3100:3100" # Loki web interface
    volumes:
      - ./loki-config.yaml:/etc/loki/loki-config.yaml
    command:
      - -config.file=/etc/loki/loki-config.yaml

  grafana:
    image: grafana/grafana:11.4.0
    ports:
      - "3001:3000" # Grafana web interface
    environment:
      GF_SECURITY_ADMIN_PASSWORD: "admin" # Change password for Grafana
    depends_on:
      - prometheus
    networks:
      - default


  # api:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.api
  #     args:
  #       BUILD_MODE: debug
  #   ports:
  #     - "8000:8000"
  #   env_file:
  #     - .env.docker
  #   depends_on:
  #     - postgres
  #     - nats
  #     - minio
  #     - scheduler
  #   develop:
  #     watch:
  #       - action: rebuild
  #         path: ./api
  #         target: /app

  # scheduler:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.scheduler
  #     args:
  #       BUILD_MODE: debug
  #   env_file:
  #     - .env.docker
  #   depends_on:
  #     - postgres
  #     - nats
  #     - worker
  #   develop:
  #     watch:
  #       - action: rebuild
  #         path: ./scheduler
  #         target: /app

  # worker:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.worker
  #     args:
  #       BUILD_MODE: debug
  #   env_file:
  #     - .env.docker
  #   depends_on:
  #     - postgres
  #     - nats

  # web:
  #   build:
  #     context: ./web
  #     dockerfile: Dockerfile
  #   ports:
  #     - "3000:3000"
  #   env_file:
  #     - ./web/.env
  #   depends_on:
  #     - api
  #   develop:
  #     watch:
  #       - action: sync
  #         path: ./web
  #         target: /app
  #         ignore:
  #           - node_modules
  #           - .next
  #       - action: rebuild
  #         path: ./web/package.json
  #       - action: rebuild
  #         path: ./web/.env

volumes:
  postgres_data:
  minio_data:
